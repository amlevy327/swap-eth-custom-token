{"version":3,"sources":["components/Spinner.js","store/actions.js","store/interactions.js","store/selectors.js","components/Converter.js","components/App.js","store/reducers.js","store/configureStore.js","reportWebVitals.js","index.js"],"names":["type","className","web3AccountLoaded","account","tokenInfoLoaded","name","symbol","decimals","exchangeRate","purchasesLoaded","purchases","newPurchaseAmountChanged","amountWei","amountCustomToken","loadWeb3","dispatch","a","console","log","window","ethereum","web3","Web3","connection","alert","location","assign","loadAccount","eth","getAccounts","accounts","loadTokenContract","networkId","tokenContract","Contract","Token","abi","networks","address","contract","getTokenInfo","methods","call","loadTokenContractEvents","getPastEvents","fromBlock","toBlock","purchasesStream","map","event","returnValues","subscribeToEvents","events","Purchase","error","purchase","accountSelector","createSelector","state","get","accountLoadedSelector","l","web3Selector","w","tokenContractLoadedSelector","tl","tokenContractSelector","t","exchangeRateLoadedSelector","exchangeRateSelector","e","tokenInfoLoadedSelector","tokenNameSelector","n","tokenSymbolSelector","s","tokenOwnerSelector","d","o","newPurchaseSelector","np","newPurchaseCreation","ne","props","newPurchase","purchaseTokens","send","from","value","on","hash","document","getElementById","Converter","onSubmit","preventDefault","id","placeholder","onChange","amountEth","parseInt","amountEthChanged","target","required","amountCustomTokenChanged","Component","connect","accountLoaded","tokenContractLoaded","exchangeRateLoaded","showAll","showContent","tokenName","tokenSymbol","App","this","loadBlockchainData","enable","net","getId","Spinner","tokenOwner","rootReducer","combineReducers","action","token","data","loaded","tokenInfo","exchangeRateUpdates","purchaseCreating","findIndex","purchasesLoading","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preloadedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store","createStore","applyMiddleware"],"mappings":"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","file":"static/js/main.f1ca887a.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function ({ type }) {\n    if(type === 'table') {\n        return(<tbody className=\"spinner-border text-light text-center\"></tbody>)\n    } else {\n        return(<div className=\"spinner-border text-light text-center\"></div>)\n    }\n}","// WEB3\n\nexport function web3Loaded(connection) {\n  return {\n    type: 'WEB3_LOADED',\n    connection\n  }\n}\n\nexport function web3AccountLoaded(account) {\n  return {\n    type: 'WEB3_ACCOUNT_LOADED',\n    account\n  }\n}\n\n// TOKEN\n\nexport function tokenContractLoaded(contract) {\n  return {\n    type: 'TOKEN_CONTRACT_LOADED',\n    contract\n  }\n}\n\nexport function tokenInfoLoaded(name, symbol, decimals, exchangeRate) {\n  return {\n      type: 'TOKEN_INFO_LOADED',\n      name,\n      symbol,\n      decimals,\n      exchangeRate\n  }\n}\n\nexport function purchasesLoaded(purchases) {\n  return {\n    type: 'PURCHASES_LOADED',\n    purchases\n  }\n}\n\nexport function newPurchaseAmountChanged(amountWei, amountCustomToken) {\n  return {\n      type: 'NEW_PURCHASE_AMOUNT_CHANGED',\n      amountWei,\n      amountCustomToken\n  }\n}\n\nexport function purchaseCreating() {\n  return {\n    type: 'PURCHASE_CREATING'\n  }\n}\n\nexport function purchaseCreated(purchase) {\n  return {\n    type: 'PURCHASE_CREATED',\n    purchase\n  }\n}","import Web3 from 'web3'\n\nimport {\n  web3Loaded,\n  web3AccountLoaded,\n  tokenContractLoaded,\n  tokenInfoLoaded,\n  purchasesLoaded,\n  purchaseCreating,\n  purchaseCreated,\n  newPurchaseAmountChanged\n} from './actions.js'\n\nimport Token from '../abis/Token.json'\n\n// WEB3\n\nexport const loadWeb3 = async (dispatch) => {\n  console.log('window.ethereum: ', window.ethereum)\n  if(typeof window.ethereum !== 'undefined'){\n    const web3 = new Web3(window.ethereum)\n    dispatch(web3Loaded(web3))\n    return web3\n  } else {\n    window.alert('Please install MetaMask')\n    window.location.assign('https://metamask.io/')\n  }\n}\n\n// ACCOUNT\n\nexport const loadAccount = async (web3, dispatch) => {\n  const accounts = await web3.eth.getAccounts()\n  const account = await accounts[0]\n  if(typeof account !== 'undefined') {\n    dispatch(web3AccountLoaded(account))\n    return account\n  } else {\n    window.alert('Please login with MetaMask')\n    return null\n  }\n}\n\n// TOKEN\n\nexport const loadTokenContract = async (web3, networkId, dispatch) => {\n  try {\n    const tokenContract = new web3.eth.Contract(Token.abi, Token.networks[networkId].address)\n    dispatch(tokenContractLoaded(tokenContract))\n    return tokenContract\n  } catch (error) {\n    console.log('Contract not deployed to the current network. Please select another network with Metamask.')\n    return null\n  }\n}\n\nexport const getTokenInfo = async (tokenContract, dispatch) => {\n  const name = await tokenContract.methods.name().call()\n  const symbol = await tokenContract.methods.symbol().call()\n  const decimals = await tokenContract.methods.decimals().call()\n  const exchangeRate = await tokenContract.methods.exchangeRate().call()\n  \n  dispatch(tokenInfoLoaded(name, symbol, decimals, exchangeRate))\n}\n\nexport const loadTokenContractEvents = async (tokenContract, dispatch) => {\n  // purchases\n  const purchasesStream = await tokenContract.getPastEvents('Purchase', { fromBlock: 0, toBlock: 'latest' })\n  console.log('purchasesStream: ', purchasesStream)\n  const purchases = purchasesStream.map((event) => event.returnValues)\n  dispatch(purchasesLoaded(purchases))\n}\n\nexport const purchaseTokens = (web3, account, tokenContract, newPurchase, dispatch) => {\n  tokenContract.methods.purchaseTokens().send({ from: account, value: newPurchase.amountWei })\n  .on('transactionHash', (hash) => {\n    dispatch(newPurchaseAmountChanged(0, 0))\n    dispatch(purchaseCreating())\n  })\n  .on('error',(error) => {\n    console.error(error)\n    window.alert(`There was an error!`)\n  })\n}\n\nexport const subscribeToEvents = async (tokenContract, dispatch) => {\n  // purchases\n  tokenContract.events.Purchase({}, (error, event) => {\n    dispatch(purchaseCreated(event.returnValues))\n  })\n}","import { createSelector } from 'reselect'\nimport { get } from 'lodash'\n\n// WEB3\n\nconst account = state => get(state, 'web3.account')\nexport const accountSelector = createSelector(account, a => a)\n\nconst accountLoaded = state => get(state, 'web3.loaded', false)\nexport const accountLoadedSelector = createSelector(accountLoaded, l => l)\n\nconst web3 = state => get(state, 'web3.connection')\nexport const web3Selector = createSelector(web3, w => w)\n\n// TOKEN\n\nconst tokenContractLoaded = state => get(state, 'token.loaded', false)\nexport const tokenContractLoadedSelector = createSelector(tokenContractLoaded, tl => tl)\n\nconst tokenContract = state => get(state, 'token.contract')\nexport const tokenContractSelector = createSelector(tokenContract, t => t)\n\nconst exchangeRateLoaded = state => get(state, 'token.exchangeRate.loaded', false)\nexport const exchangeRateLoadedSelector = createSelector(exchangeRateLoaded, l => l)\n\nconst exchangeRate = state => get(state, 'token.tokenInfo.exchangeRate', '0')\nexport const exchangeRateSelector = createSelector(exchangeRate, e => e)\n\nconst tokenInfoLoaded = state => get(state, 'token.tokenInfo.loaded', false)\nexport const tokenInfoLoadedSelector = createSelector(tokenInfoLoaded, l => l)\n\nconst tokenName = state => get(state, 'token.tokenInfo.name', '')\nexport const tokenNameSelector = createSelector(tokenName, n => n)\n\nconst tokenSymbol = state => get(state, 'token.tokenInfo.symbol', '')\nexport const tokenSymbolSelector = createSelector(tokenSymbol, s => s)\n\nconst tokenDecimals = state => get(state, 'token.tokenInfo.decimals', '')\nexport const tokenDecimalsSelector = createSelector(tokenDecimals, d => d)\n\nconst tokenOwner = state => get(state, 'token.tokenInfo.owner', '')\nexport const tokenOwnerSelector = createSelector(tokenOwner, o => o)\n\nconst newPurchase = state => get(state, 'token.newPurchase', [])\nexport const newPurchaseSelector = createSelector(newPurchase, np => np)\n\nconst newExchangeRate = state => get(state, 'token.newExchangeRate.amount', '')\nexport const newExchangeRateSelector = createSelector(newExchangeRate, ne => ne)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  newPurchaseAmountChanged\n} from '../store/actions'\nimport {\n  purchaseTokens\n} from '../store/interactions'\nimport { \n  accountLoadedSelector,\n  accountSelector,\n  exchangeRateLoadedSelector,\n  exchangeRateSelector,\n  newPurchaseSelector,\n  tokenContractLoadedSelector,\n  tokenContractSelector,\n  web3Selector\n} from '../store/selectors'\n\nconst amountEthChanged = (props, amountEth) => {\n  const {\n    dispatch,\n    exchangeRate\n  } = props\n\n  if (amountEth === \"\") {\n    document.getElementById(\"amountCustomToken\").value = 0\n    amountEth = 0\n  }\n\n  document.getElementById(\"amountCustomToken\").value = amountEth * exchangeRate\n  dispatch(newPurchaseAmountChanged(parseInt(amountEth * (10 ** 18)), amountEth * exchangeRate))\n}\n\nconst amountCustomTokenChanged = (props, amountCustomToken) => {\n  const {\n    dispatch,\n    exchangeRate\n  } = props\n\n  if (amountCustomToken === \"\") {\n    document.getElementById(\"amountEth\").value = 0\n    amountCustomToken = 0\n  }\n\n  document.getElementById(\"amountEth\").value = amountCustomToken / exchangeRate\n  dispatch(newPurchaseAmountChanged(amountCustomToken / exchangeRate * (10 ** 18), parseInt(amountCustomToken)))\n}\n\nconst newPurchaseCreation = (props) => {\n  const {\n    web3,\n    account,\n    tokenContract,\n    newPurchase,\n    dispatch\n  } = props\n\n  purchaseTokens(web3, account, tokenContract, newPurchase, dispatch)\n  \n  document.getElementById(\"amountEth\").value = \"\"\n  document.getElementById(\"amountCustomToken\").value = \"\"\n}\n\nclass Converter extends Component {\n  render() {\n    return (\n      <form onSubmit={(event) => {\n        event.preventDefault()\n        newPurchaseCreation(this.props)\n      }}>\n        <div className=\"\">\n          <input\n            id = \"amountEth\"\n            type=\"text\"\n            placeholder=\"Amount ETH\"\n            onChange={(e) => amountEthChanged(this.props, e.target.value)}\n            className='input'\n            //className=\"form-control form-control-sm bg-dark text-white\"\n            required\n          />\n          <label>ETH</label>\n        </div>\n        <label>=</label>\n        <div className=\"\">\n          <input\n            id = \"amountCustomToken\"\n            type=\"text\"\n            placeholder=\"Amount LUV\"\n            onChange={(e) => amountCustomTokenChanged(this.props, e.target.value)}\n            className='input'\n            //className=\"form-control form-control-sm bg-dark text-white\"\n            required\n          />\n          <label>LUV</label>\n        </div>\n        <button type=\"submit\" className=\"\">Purchase</button>   \n          {/* <button type=\"submit\" className=\"btn btn-primary btm-sm btn-black\">Purchase</button> */}\n      </form>\n    )\n    }\n  }\n  \n  function mapStateToProps(state) {\n    const accountLoaded = accountLoadedSelector(state)\n    const tokenContractLoaded = tokenContractLoadedSelector(state)\n    const exchangeRateLoaded = exchangeRateLoadedSelector(state)\n\n    return {\n      showAll: accountLoaded && tokenContractLoaded && exchangeRateLoaded,\n      web3: web3Selector(state),\n      account: accountSelector(state),\n      tokenContract: tokenContractSelector(state),\n      exchangeRate: exchangeRateSelector(state),\n      newPurchase: newPurchaseSelector(state)\n    }\n  }\n  \n  export default connect(mapStateToProps)(Converter)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './App.css'\nimport Spinner from './Spinner'\nimport Converter from './Converter'\nimport {\n  loadWeb3,\n  loadAccount,\n  loadTokenContract,\n  getTokenInfo,\n  loadTokenContractEvents,\n  subscribeToEvents\n} from '../store/interactions'\nimport {\n  accountSelector,\n  exchangeRateSelector,\n  tokenInfoLoadedSelector,\n  tokenNameSelector,\n  tokenOwnerSelector,\n  tokenSymbolSelector\n} from '../store/selectors'\n\nconst showContent = (props) => {\n  const {\n    tokenName,\n    tokenSymbol,\n    exchangeRate\n  } = props\n\n  return(\n    <div>\n      <h1>Buy { tokenName }!</h1>\n      <h2>1 ETH = { exchangeRate } { tokenSymbol }</h2>\n      <Converter />\n    </div>\n  )\n}\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n    const {\n      dispatch\n    } = props\n\n    await window.ethereum.enable()\n    const web3 = await loadWeb3(dispatch)\n    const networkId = await web3.eth.net.getId()\n    \n    await loadAccount(web3, dispatch)\n    \n    const tokenContract = await loadTokenContract(web3, networkId, dispatch)\n    if (!tokenContract) {\n      window.alert('Token smart contract not detected on the current network. Please select another network with Metamask.')\n    }\n\n    await getTokenInfo(tokenContract, dispatch)\n    await loadTokenContractEvents(tokenContract, dispatch)\n    await subscribeToEvents(tokenContract, dispatch)\n  }\n\n  render() {\n    return (\n      <div>\n        { this.props.showAll ? showContent(this.props) : <Spinner /> }\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const tokenInfoLoaded = tokenInfoLoadedSelector(state)\n  \n  return {\n    showAll: tokenInfoLoaded,\n    tokenName: tokenNameSelector(state),\n    tokenSymbol: tokenSymbolSelector(state),\n    exchangeRate: exchangeRateSelector(state),\n    tokenOwner: tokenOwnerSelector(state),\n    account: accountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App)","import { combineReducers } from \"redux\"\n\n// WEB3\nfunction web3(state = {}, action) {\n  switch(action.type) {\n    case 'WEB3_LOADED':\n      return { ...state, connection: action.connection}\n    case 'WEB3_ACCOUNT_LOADED':\n      return { ...state, account: action.account }\n    default:\n      return state\n  }\n}\n\n// TOKEN\nfunction token(state = {}, action) {\n  let index, data\n\n  switch(action.type) {\n    case 'TOKEN_CONTRACT_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    case 'TOKEN_INFO_LOADED':\n      return { ...state, tokenInfo: { ...state.tokenInfo, loaded: true, name: action.name, symbol: action.symbol, decimals: action.decimals, exchangeRate: action.exchangeRate } }\n    case 'EXCHANGE_RATE_UPDATES_LOADED':\n      return { ...state, exchangeRateUpdates: { loaded: true, data: action.exchangeRateUpdates} }\n    case 'PURCHASES_LOADED':\n      return { ...state, purchases: { loaded: true, data: action.purchases} }\n    case 'PURCHASE_CREATING':\n        return { ...state, purchaseCreating: true }\n    case 'PURCHASE_CREATED':\n      // prevent duplicate orders\n      index = state.purchases.data.findIndex(purchase => purchase.id === action.purchase.id);\n      \n      if(index === -1) {\n          data = [...state.purchases.data, action.purchase]\n      } else {\n          data = state.purchases.data\n      }\n      \n      return {\n          ...state,\n          purchaseCreating: false,\n          purchases: {\n              ...state.purchases,\n              data\n          },\n      }\n    case 'NEW_PURCHASE_AMOUNT_CHANGED':\n      return { ...state, newPurchase: { ...state.newPurchase, amountWei: action.amountWei, amountCustomToken: action.amountCustomToken } }\n    case 'PURCHASES_LOADING':\n      return { ...state, purchasesLoading: true }\n    default:\n      return state\n  }\n}\n\n\nconst rootReducer = combineReducers({\n  web3,\n  token\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from \"./reducers\"\n\nconst loggerMiddleware = createLogger()\nconst middleware = []\n\n// for redux dev tools - allows connedtion to app\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App'\nimport configureStore from './store/configureStore'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}